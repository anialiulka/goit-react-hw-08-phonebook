{"version":3,"file":"static/js/698.7d55bcff.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Input/Input.module.css?1f33","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/Input/index.jsx","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/index.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/index.jsx","webpack://react-homework-template/./src/components/FIlter/Filter.module.css?7d27","components/FIlter/index.jsx","webpack://react-homework-template/./src/components/ContactElement/ContactElement.module.css?8e20","components/ContactElement/ContactElement.jsx","webpack://react-homework-template/./src/components/App/App.module.css?583a","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Input_form__KGIPH\",\"input\":\"Input_input__E5rzA\",\"label\":\"Input_label__NXpCD\",\"button\":\"Input_button__kSnhk\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport css from './Input.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Input = () => {\n  const contacts = useSelector(selectContacts);\n  const [form, setForm] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const addContactHandler = data => {\n    const nameRepeated = contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n    if (nameRepeated) {\n      return alert(`${nameRepeated.name} is already in your contacts`);\n    }\n    dispatch(addContact(data));\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setForm(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContactHandler(form);\n    setForm({ name: '', number: '' });\n  };\n\n  return (\n    <form action=\"\" className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={form.name}\n        />\n      </label>\n      <label htmlFor=\"number\" className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={form.number}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add to contacts\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import css from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ children }) => {\n  return <h2 className={css.title}>{children}</h2>;\n};\n\nTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\"};","import css from './Contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport const Contacts = ({ children }) => {\n  const isLoading = useSelector(selectIsLoading);\n  if (isLoading) {\n    return <div> Loading... </div>;\n  }\n  return <ul className={css.list}>{children}</ul>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__wLKNq\",\"label\":\"Filter_label__XDZA3\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const Filter = () => {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => dispatch(filteredContacts(e.target.value));\n\n  return (\n    <label htmlFor=\"filter\" className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        required\n        onChange={handleChange}\n        value={filter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactElement_listItem__5Zmt8\",\"button\":\"ContactElement_button__U3o19\"};","import css from './ContactElement.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact as deleteContactInfo } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactElement = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = id => dispatch(deleteContactInfo(id));\n  return contacts.map(contact => (\n    <li className={css.listItem} key={contact.id}>\n      {contact.name} : {contact.number}\n      <button className={css.button} onClick={() => deleteContact(contact.id)}>\n        Delete\n      </button>\n    </li>\n  ));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__cu9yO\"};","import { Input } from 'components/Input';\nimport { Title } from 'components/Title';\nimport { Contacts } from 'components/Contacts';\nimport { Filter } from 'components/FIlter';\nimport { ContactElement } from 'components/ContactElement/ContactElement';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport css from 'components/App/App.module.css';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(fetchContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <Title>Phonebook</Title>\n      <Input />\n      <Title>Contacts</Title>\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      <Filter />\n      <Contacts>\n        <ContactElement />\n      </Contacts>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectFilteredContacts","contact","toLowerCase","includes","Input","useSelector","useState","number","form","setForm","dispatch","useDispatch","handleChange","target","prevState","action","className","css","onSubmit","e","preventDefault","data","nameRepeated","alert","addContact","addContactHandler","htmlFor","type","pattern","title","required","onChange","Title","children","Contacts","Filter","filteredContacts","ContactElement","onClick","id","deleteContactInfo","fetchContacts","error","useEffect"],"sourceRoot":""}